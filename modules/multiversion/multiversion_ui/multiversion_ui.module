<?php

use Drupal\Component\Utility\Unicode;

/**
 * Implements hook_theme().
 */
function multiversion_ui_theme() {
  return array(
    'multiversion_rev' => array(
      'render element' => 'elements',
    ),
  );
}

/**
 * Implements hook_entity_type_alter().
 *
 * @param \Drupal\Core\Entity\EntityTypeInterface[] $entity_types
 */
function multiversion_ui_entity_type_alter(array &$entity_types) {
  /** @var \Drupal\multiversion\MultiversionManagerInterface $manager */
  $manager = \Drupal::service('multiversion.manager');

  foreach ($entity_types as $entity_type) {
    if ($manager->isEnabledEntityType($entity_type)) {
      if ($entity_type->hasViewBuilderClass() && $entity_type->hasLinkTemplate('canonical')) {
        $entity_type->setLinkTemplate('version-history', $entity_type->getLinkTemplate('canonical') . '/revisions');
        $entity_type->setLinkTemplate('revision', $entity_type->getLinkTemplate('canonical') . '/revisions/{' . $entity_type->id() . '_revision}/view');
      }
    }
  }
}

/**
 * Implements hook_local_tasks_alter().
 */
function multiversion_ui_local_tasks_alter(&$local_tasks) {
  // Remove the revisions local task for node since we're defining our own.
  unset($local_tasks['entity.node.version_history']);
}

/**
 * Prepares variables for Multiversion revision templates.
 */
function template_preprocess_multiversion_rev(&$variables) {
  $uuid = $variables['elements']['#uuid'];
  $rev = $variables['elements']['#rev'];
  $rev_info = array_merge(
    \Drupal::service('entity.index.rev')->get("$uuid:$rev"),
    $variables['elements']['#rev_info']
  );

  $variables = array_merge($variables, $rev_info);

  list($i) = explode('-', $rev);
  // Apart from the index length, we want 7 characters plus dash and ellipsis.
  $length = strlen($i) + 9;
  $title = Unicode::truncate($rev, $length, FALSE, TRUE);

  if (!empty($rev_info['revision_id'])) {
    $entity_revision = \Drupal::entityManager()->getStorage($rev_info['entity_type_id'])->loadRevision($rev_info['revision_id']);
    $variables['title'] = \Drupal::l($title, $entity_revision->urlInfo('revision'));
  }
  else {
    $variables['title'] = $title;
  }
}
